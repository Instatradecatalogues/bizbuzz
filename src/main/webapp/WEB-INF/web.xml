<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<display-name>Carriage Web Application</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:META-INF/spring/*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<filter>
		<filter-name>ExpiresFilter</filter-name>
		<filter-class>org.apache.catalina.filters.ExpiresFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>ExpiresByType image</param-name>
			<param-value>access plus 20 minutes</param-value>
		</init-param>
		<init-param>
			<param-name>ExpiresByType text/css</param-name>
			<param-value>access plus 20 minutes</param-value>
		</init-param>
		<init-param>
			<param-name>ExpiresByType application/javascript</param-name>
			<param-value>access plus 20 minutes</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>ExpiresFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<async-supported>true</async-supported>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>bizbuzzatmosphere</servlet-name>
		<servlet-class>org.atmosphere.cpr.MeteorServlet</servlet-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>org.atmosphere.servlet</param-name>
			<param-value>org.springframework.web.servlet.DispatcherServlet</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.filter</param-name>
			<param-value>org.springframework.web.filter.DelegatingFilterProxy</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.filter.name</param-name>
			<param-value>springSecurityFilterChain</param-value>
		</init-param>
		<!-- Reduce memory usage by sharing ExecutorServices || Preventing Out 
			Of Memory -->
		<init-param>
			<param-name>org.atmosphere.cpr.broadcaster.shareableThreadPool</param-name>
			<param-value>true</param-value>
		</init-param>

		<!-- Recovering a destroyed Broadcaster -->
		<init-param>
			<param-name>org.atmosphere.cpr.recoverFromDestroyedBroadcaster</param-name>
			<param-value>true</param-value>
		</init-param>

		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:META-INF/springatmosphere/*.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>bizbuzzatmosphere</servlet-name>
		<url-pattern>/websockets</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>bizbuzz</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:META-INF/spring/*.xml</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>bizbuzz</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>
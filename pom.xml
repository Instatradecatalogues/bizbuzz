<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.carriage</groupId>
	<artifactId>carriage</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<scm>
		<connection>scm:git:https://p12sushilkm@bitbucket.org/p12sushilkm/bizbuzz.git</connection>
		<url>https://p12sushilkm@bitbucket.org/p12sushilkm/bizbuzz.git</url>
	</scm>
	<packaging>war</packaging>
	<name>Carriage Web Application</name>
	<url>http://maven.apache.org</url>
	<repositories>
		<repository>
			<id>maven-central</id>
			<url>http://repo1.maven.org/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>uglifyjs-maven-plugin</id>
			<url>https://raw.github.com/tqh/uglifyjs-maven-plugin/master/repo</url>
		</pluginRepository>
	</pluginRepositories>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>4.0.2.RELEASE</spring.version>
		<atmosphere.version>2.1.5</atmosphere.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>3.2.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>3.2.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>3.2.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.5.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<version>3.0.3</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.29</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-runtime</artifactId>
			<version>${atmosphere.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.8</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-xc</artifactId>
			<version>1.9.8</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.1.Final</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>

		<!-- Apache Commons IO -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>

		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- jaxb dependency -->
                <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>2.2.11</version>
                </dependency>
                <dependency>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-core</artifactId>
                    <version>2.2.11</version>
                </dependency>
                <dependency>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                    <version>2.2.11</version>
                </dependency>
                <dependency>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                    <version>1.1.1</version>
                </dependency>

	</dependencies>
	<build>
		<finalName>bizbuzz</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- <plugin> -->
			<!-- <groupId>net.tqh.plugins</groupId> -->
			<!-- <artifactId>uglifyjs-maven-plugin</artifactId> -->
			<!-- <version>1.0</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>uglify-js</id> -->
			<!-- <goals> -->
			<!-- <goal>uglify</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <skip>false</skip> -->
			<!-- <sources> -->
			<!-- <directory>${project.build.directory}/${project.build.finalName}/static/js</directory> -->
			<!-- <excludes> -->
			<!-- <exclude>org/foo</exclude> -->
			<!-- <exclude>org/bar</exclude> -->
			<!-- <exclude>**/*.min.js</exclude> -->
			<!-- </excludes> -->
			<!-- <includes> -->
			<!-- <include>org/foo/lib</include> -->
			<!-- </includes> -->
			<!-- </sources> -->
			<!-- <sourceDirectory>${project.build.directory}/${project.build.finalName}/static/js</sourceDirectory> -->
			<!-- <outputDirectory>${project.build.directory}/${project.build.finalName}/static/js</outputDirectory> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>compress</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<nosuffix>true</nosuffix>
					<aggregations>
						<aggregation>
							<!-- remove files after aggregation (default: false) <removeIncluded>true</removeIncluded> -->
							<!-- insert new line after each concatenation (default: false) -->
							<!-- <insertNewLine>true</insertNewLine> -->
							<output>${project.build.directory}/${project.build.finalName}/static/js/register-combined-${gitHash}.min.js</output>
							<!-- files to include, path relative to output's directory or absolute 
								path -->
							<!--inputDir>base directory for non absolute includes, default to 
								parent dir of output</inputDir -->
							<includes>
								<include>${project.build.directory}/${project.build.finalName}/static/js/jquery/jquery-1.11.1.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/bootstrap/bootstrap.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/customjs.js</include>
								<!-- Js files for making phonenumber international... -->
								<include>${project.build.directory}/${project.build.finalName}/static/js/countrycode/intlTelInput.js</include>
								<!-- Sliding menu -->
								<include>${project.build.directory}/${project.build.finalName}/static/js/slidermenu.js</include>
							</includes>
							<!-- files to exclude, path relative to output's directory <excludes> 
								<exclude>**/*.pack.js</exclude> <exclude>**/compressed.css</exclude> </excludes> -->
						</aggregation>

						<aggregation>
							<!-- remove files after aggregation (default: false) <removeIncluded>true</removeIncluded> -->
							<!-- insert new line after each concatenation (default: false) -->
							<!-- <insertNewLine>true</insertNewLine> -->
							<output>${project.build.directory}/${project.build.finalName}/static/css/register-combined-${gitHash}.min.css</output>
							<!-- files to include, path relative to output's directory or absolute 
								path -->
							<!--inputDir>base directory for non absolute includes, default to 
								parent dir of output</inputDir -->
							<includes>
								<include>${project.build.directory}/${project.build.finalName}/static/css/bootstrap/bootstrap.css</include>
								<include>${project.build.directory}/${project.build.finalName}/static/css/bootstrap/bootstrap-theme.css</include>
								<include>${project.build.directory}/${project.build.finalName}/static/css/common-theme.css</include>
								<!-- Css for making phonenumber international... -->
								<include>${project.build.directory}/${project.build.finalName}/static/css/countrycode/intlTelInput.css</include>
								<include>${project.build.directory}/${project.build.finalName}/static/css/slidermenu.css</include>
							</includes>
							<!-- files to exclude, path relative to output's directory <excludes> 
								<exclude>**/*.pack.js</exclude> <exclude>**/compressed.css</exclude> </excludes> -->
						</aggregation>

						<aggregation>
							<!-- remove files after aggregation (default: false) <removeIncluded>true</removeIncluded> -->
							<!-- insert new line after each concatenation (default: false) -->
							<!-- <insertNewLine>true</insertNewLine> -->
							<output>${project.build.directory}/${project.build.finalName}/static/js/seller-buyer-combined-${gitHash}.min.js</output>
							<!-- files to include, path relative to output's directory or absolute 
								path -->
							<!--inputDir>base directory for non absolute includes, default to 
								parent dir of output</inputDir -->
							<includes>
								<include>${project.build.directory}/${project.build.finalName}/static/js/jquery/jquery-1.11.1.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/jquery/jquery.browser.deprecated.support.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/bootstrap/bootstrap.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/customjs.js</include>
								<!-- Sliding menu -->
								<include>${project.build.directory}/${project.build.finalName}/static/js/slidermenu.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/chat.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/jquery/jquery.atmosphere.js</include>
								<!-- Show message notification box -->
								<include>${project.build.directory}/${project.build.finalName}/static/js/notification/classie.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/notification/modernizr.custom.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/notification/notificationFx.js</include>
							</includes>
							<!-- files to exclude, path relative to output's directory <excludes> 
								<exclude>**/*.pack.js</exclude> <exclude>**/compressed.css</exclude> </excludes> -->
						</aggregation>

						<aggregation>
							<!-- remove files after aggregation (default: false) <removeIncluded>true</removeIncluded> -->
							<!-- insert new line after each concatenation (default: false) -->
							<!-- <insertNewLine>true</insertNewLine> -->
							<output>${project.build.directory}/${project.build.finalName}/static/css/seller-buyer-combined-${gitHash}.min.css</output>
							<!-- files to include, path relative to output's directory or absolute 
								path -->
							<!--inputDir>base directory for non absolute includes, default to 
								parent dir of output</inputDir -->
							<includes>
								<include>${project.build.directory}/${project.build.finalName}/static/css/bootstrap/bootstrap.css</include>
								<include>${project.build.directory}/${project.build.finalName}/static/css/bootstrap/bootstrap-theme.css</include>
								<include>${project.build.directory}/${project.build.finalName}/static/css/common-theme.css</include>
								<!-- Css for making phonenumber international... -->
								<include>${project.build.directory}/${project.build.finalName}/static/css/slidermenu.css</include>
								<include>${project.build.directory}/${project.build.finalName}/static/css/chat-theme.css</include>
								<include>${project.build.directory}/${project.build.finalName}/static/css/notification/ns-default.css</include>
								<include>${project.build.directory}/${project.build.finalName}/static/css/notification/ns-style-growl.css</include>
							</includes>
							<!-- files to exclude, path relative to output's directory <excludes> 
								<exclude>**/*.pack.js</exclude> <exclude>**/compressed.css</exclude> </excludes> -->
						</aggregation>

						<aggregation>
							<!-- remove files after aggregation (default: false) <removeIncluded>true</removeIncluded> -->
							<!-- insert new line after each concatenation (default: false) -->
							<!-- <insertNewLine>true</insertNewLine> -->
							<output>${project.build.directory}/${project.build.finalName}/static/js/cordova/cordova-combined-${gitHash}.min.js</output>
							<!-- files to include, path relative to output's directory or absolute 
								path -->
							<!--inputDir>base directory for non absolute includes, default to 
								parent dir of output</inputDir -->
							<includes>
								<include>${project.build.directory}/${project.build.finalName}/static/js/cordova/cordova.js</include>
								<include>${project.build.directory}/${project.build.finalName}/static/js/cordova/MobileFileSystem.js</include>
							</includes>
							<!-- files to exclude, path relative to output's directory <excludes> 
								<exclude>**/*.pack.js</exclude> <exclude>**/compressed.css</exclude> </excludes> -->
						</aggregation>

					</aggregations>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>git-hash</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>create</goal>
						</goals>
						<configuration>
							<format>{0}</format>
							<items>
								<item>scmVersion</item>
							</items>
							<buildNumberPropertyName>gitHash</buildNumberPropertyName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<tasks>
								<!--We're assuming SnapdealStaticResources is already build which 
									will cleanup tomcat server -->
								<property file="user.properties" />
								<echo message="+---------------------------------------------------+" />
								<echo message="    copying war to tomcat server" />
								<echo message="+---------------------------------------------------+" />
								<copy todir="${tomcat.webapps}/${project.build.finalName}"
									overwrite="true">
									<fileset
										dir="${project.build.directory}/${project.build.finalName}">
										<include name="**/*" />
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>
	</build>
</project>
